package testCase;

import io.qameta.allure.*;
import org.json.JSONObject;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import util.Request;
import util.ResponseInformation;

import static util.ApiOwaspConfig.*;
import static util.EnvConfig.HOST;

public class VulnerabilityTest {
    Request request= new Request();
    ResponseInformation res = new ResponseInformation();
    String idScanner;

//    @Test
//    public void vulnerabilityOwaspZapTest1() throws InterruptedException {
//        res= request.sendGetRequest("http://127.0.0.1:8888/JSON/ascan/action/scan/?url=http://demo.owasp-juice.shop");
//        JSONObject response= new JSONObject(res.getBody());
//        idScanner= response.getString("scan").toString();
//
//        String status="0";
//        do {
//            res= request.sendGetRequest("http://127.0.0.1:8888/JSON/ascan/view/status/?scanId="+idScanner);
//            response= new JSONObject(res.getBody());
//            status= response.getString("status").toString();
//            System.out.println("INFO> status: ["+status+"%]");
//            Thread.sleep(10000);
//        } while(!status.equals("100"));
//
//        System.out.println("=========================> Lista de vulnerabilidades");
//        request.sendGetRequest("http://127.0.0.1:8888/JSON/ascan/view/scanProgress/?scanId="+idScanner);
//        System.out.println("=========================> Reporte");
//        request.sendGetRequest("http://127.0.0.1:8888/OTHER/core/other/htmlreport/?");
//        System.out.println("=========================> FINALIZO");
//    }

    @Test
    @Order(2)
    @DisplayName("Verify the scanner of owasp zap")
    @Description("this test case is to verify .......")
    @Epic("demo.owasp-juice.shop")
    @Feature("Login")
    @Owner("Ximena Soto")
    @Link("jira/123456")
    @Issue("mybug/987411")
    public void vulnerabilityOwaspZapTest() throws InterruptedException {
        this.startScanningInZAP();
        this.monitoringTheProgressScanner();
    }

    @Step("Select the Host and Start Scanning")
    public void startScanningInZAP(){
        res= request.sendGetRequest(String.format(START_SCANNING,HOST));
        JSONObject response= new JSONObject(res.getBody());
        idScanner= response.getString("scan").toString();
    }
    @Step("Monitoring the scanning 100%")
    public void monitoringTheProgressScanner() throws InterruptedException {
        String status="0";
        do {
            res= request.sendGetRequest(String.format(PROGRESS,idScanner));
            JSONObject response= new JSONObject(res.getBody());
            status= response.get("status").toString();
            System.out.println("INFO> status: ["+status+"%]");
            Thread.sleep(10000);
        } while(!status.equals("100"));
    }

    @AfterEach
    public void after(){
        res=request.sendGetRequest(String.format(GET_LIST_VULNERABILITY,idScanner));
        this.attachment("Vulnerability List",res.getBody());
        res=request.sendGetRequest(GET_REPORT);
        this.attachment("OWASP ZAP Report",res.getBody());
    }

    @Attachment(value = "{0}", type = "text/html")
    public String attachment(String name,String content){
        return content;
    }

}